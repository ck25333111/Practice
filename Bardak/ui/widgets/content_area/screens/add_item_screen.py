# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# Bardak/ui/widgets/content_area/screens/add_item_screen.py
# –õ–æ–≥–∏–∫–∞ —ç–∫—Ä–∞–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞ ‚Äî –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –º–µ—Å—Ç–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

from typing import List
from kivy.uix.screenmanager import Screen
from kivy.clock import mainthread
from Bardak.services.add_item_service import AddItemService


class AddItemScreen(Screen):
    """
    –≠–∫—Ä–∞–Ω –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞ ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π.
    """

    def on_pre_enter(self) -> None:
        """
        –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —ç–∫—Ä–∞–Ω. –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –º–µ—Å—Ç —Ö—Ä–∞–Ω–µ–Ω–∏—è.
        """
        print("üì≤ –û—Ç–∫—Ä—ã—Ç —ç–∫—Ä–∞–Ω AddItemScreen")
        print("üß™ self.ids:", self.ids.keys())
        self._load_places()
        print('self._load_places() ',self._load_places())

    def _load_places(self) -> None:
        places = AddItemService.get_all_places()
        print('_load_places - places', places)
        self._update_place_spinner(places)

    @mainthread
    def _update_place_spinner(self, places: List[str]) -> None:
        print(f"üåÄ –û–±–Ω–æ–≤–ª—è–µ–º Spinner –º–µ—Å—Ç —Ö—Ä–∞–Ω–µ–Ω–∏—è: {places}")
        spinner = self.ids.place_spinner
        spinner.values = places
        spinner.text = "–ú–µ—Å—Ç–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è"
        print("‚úÖ spinner.values –ø—Ä–∏—Å–≤–æ–µ–Ω—ã:", spinner.values)

        self.ids.box_spinner.disabled = True
        self.ids.section_spinner.disabled = True

    def on_place_selected(self, place_name: str) -> None:
        print(f"üì¶ –í—ã–±—Ä–∞–Ω–æ –º–µ—Å—Ç–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è: {place_name}")
        if not place_name or place_name == "–ú–µ—Å—Ç–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è":
            return

        boxes = AddItemService.get_boxes_for_place(place_name)
        self._update_box_spinner(boxes)

    @mainthread
    def _update_box_spinner(self, boxes: List[str]) -> None:
        spinner = self.ids.box_spinner
        spinner.values = boxes
        spinner.text = "–ú–µ–±–µ–ª—å / –ë–æ–∫—Å"
        spinner.disabled = False

        self.ids.section_spinner.text = "–°–µ–∫—Ü–∏—è / –Ø—â–∏–∫"
        self.ids.section_spinner.values = []
        self.ids.section_spinner.disabled = True

    def on_box_selected(self, box_name: str) -> None:
        place_name = self.ids.place_spinner.text
        if not box_name or box_name == "–ú–µ–±–µ–ª—å / –ë–æ–∫—Å":
            return

        sections = AddItemService.get_sections_for_box(place_name, box_name)
        self._update_section_spinner(sections)

    @mainthread
    def _update_section_spinner(self, sections: List[str]) -> None:
        spinner = self.ids.section_spinner
        spinner.values = sections
        spinner.text = "–°–µ–∫—Ü–∏—è / –Ø—â–∏–∫"
        spinner.disabled = False